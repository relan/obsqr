buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.11.1+'
	}
}

apply plugin: 'android'

repositories {
	mavenCentral()
}

dependencies {
	compile 'com.jakewharton:butterknife:5.1.1+'
}

android {
	compileSdkVersion 'android-19'
	buildToolsVersion '20.0.0'

	defaultConfig {
		minSdkVersion 9
		targetSdkVersion 19
		versionCode 13
		versionName "2.7"
	}

	signingConfigs {
		release
	}

	buildTypes {
		release {
			runProguard false
			/*proguardFile getDefaultProguardFile('proguard-android.txt')*/
			signingConfig signingConfigs.release
			applicationVariants.all { variant ->
				def file = variant.outputFile
				variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
			}
		}
	}

	defaultConfig {
		ndk {
			moduleName "zbar"
			ldLibs "log"
			cFlags "-std=c99"
		}
	}

	productFlavors {
		x86 {
			ndk {
				abiFilter "x86"
			}
		}
		mips {
			ndk {
				abiFilter "mips"
			}
		}
		armv7 {
			ndk {
				abiFilter "armeabi-v7a"
			}
		}
		arm {
			ndk {
				abiFilter "armeabi"
			}
		}
		fat
	}

	lintOptions {
		abortOnError false
	}
}

if (project.hasProperty('storeFile') &&
		project.hasProperty('storePassword') &&
		project.hasProperty('keyAlias') &&
		project.hasProperty('keyPassword')) {
	android.signingConfigs.release.storeFile = file(storeFile)
	android.signingConfigs.release.storePassword = storePassword
	android.signingConfigs.release.keyAlias = keyAlias
	android.signingConfigs.release.keyPassword = keyPassword
} else {
	buildTypes.release.signingConfig = null
}

task appStart(type: Exec, dependsOn: ':installArmDebug') {
	commandLine 'adb', 'shell', 'am', 'start', '-n', 'trikita.obsqr/.ObsqrActivity'
}

